{"version":3,"sources":["webpack://search-test/./.yalc/@adobe/gatsby-theme-aio/src/components/SideNav/index.js"],"names":["selectedPages","selectedSubPages","setShowSideNav","hasHeader","some","page","header","isMultiLevel","pages","length","role","css","MOBILE_SCREEN_WIDTH","className","classNames","renderSubtree","level","filter","title","href","map","index","isSelected","find","selectedItem","id","nextId","key","isExternalLink","getExternalLinkProps","onClick","to","heading"],"mappings":"koBAoIA,UA/GgB,SAAC,GAAyD,IAAvDA,EAAsD,EAAtDA,cAAeC,EAAuC,EAAvCA,iBAAkBC,EAAqB,EAArBA,eAE5CC,EAAYF,EAAiBG,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACjDC,EAAeN,EAAiBG,MAAK,SAACC,GAAD,aAAUA,SAAA,UAAAA,EAAMG,aAAN,eAAaC,QAAS,KAsE3E,OACE,eACEC,KAAK,aACL,aAAW,UACXC,KAAKA,QAAF,sFAG+BC,KAH/B,kEAOH,eACEF,KAAK,OACLC,IAAG,IASH,cACE,aAAW,oBACXE,UAAWC,IAAW,mBAAoB,CAAE,+BAAgCP,IAAiBJ,KA5F/E,SAAhBY,EAAiBP,EAAOQ,GAAR,OACpBR,EACGS,QAAO,SAACZ,GAAD,OAAUA,EAAKa,OAASb,EAAKc,QACpCC,KAAI,SAACf,EAAMgB,GACV,IAAMC,EAAatB,EAAcuB,MAAK,SAACC,GAAD,OAAkBA,IAAiBnB,KACnEoB,GAAKC,UAEX,OACE,cACEC,IAAKN,EACLV,IAAG,EAKHE,UAAWC,IAAW,CACpB,wBACA,CAAE,cAAeQ,GAAcjB,EAAKC,QACpC,CAAE,cAAeN,EAAcA,EAAcS,OAAS,KAAOJ,GAAQiB,MAEtEjB,EAAKC,QACJ,cAAIO,UAAU,2BAA2BY,GAAIA,GAC1CpB,EAAKa,QAENU,QAAevB,EAAKc,OACtB,wBACMU,QAAqBxB,EAAKc,MADhC,CAEEA,KAAMd,EAAKc,KACXN,UAAU,4BACVH,KAAK,WACL,aAAYM,EACZc,QAAS,WACP5B,GAAe,MAEhBG,EAAKa,QAGR,QAAC,KAAD,CACEY,QAAS,WACP5B,GAAe,IAEjB6B,GAAI1B,EAAKc,KACTN,UAAU,4BACVH,KAAK,WACL,aAAYM,GACXX,EAAKa,OAGTb,EAAKG,QACJ,sBACEK,UAAU,mBACVF,KAAKA,QACDK,EAAQ,EAAR,iFAGuBA,EAAQ,GAH/B,uGAME,GAPH,SASEX,EAAK2B,QAAU,CAAE,kBAAmBP,GAAO,IAC/CV,EAAcV,EAAKG,MAAOQ,EAAQ,QAgCxCD,CAAcd,EAAkB","file":"471-ebd61dec0422efa3b498.js","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link as GatsbyLink } from 'gatsby';\nimport { isExternalLink, getExternalLinkProps, MOBILE_SCREEN_WIDTH } from '../../utils';\nimport { css } from '@emotion/react';\nimport classNames from 'classnames';\nimport '@spectrum-css/sidenav';\nimport nextId from 'react-id-generator';\n\nconst SideNav = ({ selectedPages, selectedSubPages, setShowSideNav }) => {\n  // If one page has header enabled, use header navigation type for all navigation items\n  const hasHeader = selectedSubPages.some((page) => page.header);\n  const isMultiLevel = selectedSubPages.some((page) => page?.pages?.length > 0);\n\n  const renderSubtree = (pages, level) =>\n    pages\n      .filter((page) => page.title && page.href)\n      .map((page, index) => {\n        const isSelected = selectedPages.find((selectedItem) => selectedItem === page);\n        const id = nextId();\n\n        return (\n          <li\n            key={index}\n            css={css`\n              &:not(.is-expanded) .spectrum-SideNav {\n                display: none;\n              }\n            `}\n            className={classNames([\n              'spectrum-SideNav-item',\n              { 'is-expanded': isSelected || page.header },\n              { 'is-selected': selectedPages[selectedPages.length - 1] === page && isSelected }\n            ])}>\n            {page.header ? (\n              <h2 className=\"spectrum-SideNav-heading\" id={id}>\n                {page.title}\n              </h2>\n            ) : isExternalLink(page.href) ? (\n              <a\n                {...getExternalLinkProps(page.href)}\n                href={page.href}\n                className=\"spectrum-SideNav-itemLink\"\n                role=\"treeitem\"\n                aria-level={level}\n                onClick={() => {\n                  setShowSideNav(false);\n                }}>\n                {page.title}\n              </a>\n            ) : (\n              <GatsbyLink\n                onClick={() => {\n                  setShowSideNav(false);\n                }}\n                to={page.href}\n                className=\"spectrum-SideNav-itemLink\"\n                role=\"treeitem\"\n                aria-level={level}>\n                {page.title}\n              </GatsbyLink>\n            )}\n            {page.pages && (\n              <ul\n                className=\"spectrum-SideNav\"\n                css={css`\n                  ${level > 1\n                    ? `\n                    & > li > a {\n                      padding-left: calc(${level + 1} * var(--spectrum-global-dimension-size-150)) !important;\n                    }\n                  `\n                    : ''}\n                `}\n                {...(page.heading ? { 'aria-labelledby': id } : {})}>\n                {renderSubtree(page.pages, level + 1)}\n              </ul>\n            )}\n          </li>\n        );\n      });\n\n  return (\n    <nav\n      role=\"navigation\"\n      aria-label=\"Primary\"\n      css={css`\n        margin-top: var(--spectrum-global-dimension-size-800);\n\n        @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n          margin-top: var(--spectrum-global-dimension-size-1200);\n        }\n      `}>\n      <div\n        role=\"tree\"\n        css={css`\n          box-sizing: border-box;\n          padding: 0 var(--spectrum-global-dimension-size-400) var(--spectrum-global-dimension-size-400);\n          overflow: auto;\n          height: calc(\n            100vh - var(--spectrum-global-dimension-size-800) - var(--spectrum-global-dimension-size-400) -\n              var(--spectrum-global-dimension-size-400)\n          );\n        `}>\n        <ul\n          aria-label=\"Table of contents\"\n          className={classNames('spectrum-SideNav', { 'spectrum-SideNav--multiLevel': isMultiLevel && !hasHeader })}>\n          {renderSubtree(selectedSubPages, 1)}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nSideNav.propTypes = {\n  selectedPages: PropTypes.array,\n  selectedSubPages: PropTypes.array,\n  setShowSideNav: PropTypes.func\n};\n\nexport default SideNav;\n"],"sourceRoot":""}